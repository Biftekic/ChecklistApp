{
  "testModules": [
    {
      "moduleId": "/home/tinpavlic1/claude-projects/ChecklistApp/components/ui/__tests__/checkbox.test.tsx",
      "tests": [
        {
          "name": "should render checkbox",
          "fullName": "Checkbox > should render checkbox",
          "state": "passed"
        },
        {
          "name": "should handle checked state",
          "fullName": "Checkbox > should handle checked state",
          "state": "passed"
        },
        {
          "name": "should handle indeterminate state",
          "fullName": "Checkbox > should handle indeterminate state",
          "state": "passed"
        },
        {
          "name": "should call onCheckedChange when clicked",
          "fullName": "Checkbox > should call onCheckedChange when clicked",
          "state": "passed"
        },
        {
          "name": "should be disabled when disabled prop is true",
          "fullName": "Checkbox > should be disabled when disabled prop is true",
          "state": "passed"
        },
        {
          "name": "should apply custom className",
          "fullName": "Checkbox > should apply custom className",
          "state": "passed"
        },
        {
          "name": "should show check icon when checked",
          "fullName": "Checkbox > should show check icon when checked",
          "state": "passed"
        },
        {
          "name": "should show minus icon when indeterminate",
          "fullName": "Checkbox > should show minus icon when indeterminate",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/tinpavlic1/claude-projects/ChecklistApp/components/ui/__tests__/button.test.tsx",
      "tests": [
        {
          "name": "should render button with text",
          "fullName": "Button > should render button with text",
          "state": "passed"
        },
        {
          "name": "should handle click events",
          "fullName": "Button > should handle click events",
          "state": "passed"
        },
        {
          "name": "should render with different variants",
          "fullName": "Button > should render with different variants",
          "state": "passed"
        },
        {
          "name": "should render with different sizes",
          "fullName": "Button > should render with different sizes",
          "state": "passed"
        },
        {
          "name": "should be disabled when disabled prop is true",
          "fullName": "Button > should be disabled when disabled prop is true",
          "state": "passed"
        },
        {
          "name": "should render as child component when asChild is true",
          "fullName": "Button > should render as child component when asChild is true",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/tinpavlic1/claude-projects/ChecklistApp/lib/stores/__tests__/customization-store.test.ts",
      "tests": [
        {
          "name": "should set and clear selected template",
          "fullName": "useCustomizationStore > should set and clear selected template",
          "state": "passed"
        },
        {
          "name": "should toggle room selection",
          "fullName": "useCustomizationStore > should toggle room selection",
          "state": "passed"
        },
        {
          "name": "should select and deselect all rooms",
          "fullName": "useCustomizationStore > should select and deselect all rooms",
          "state": "passed"
        },
        {
          "name": "should toggle task selection",
          "fullName": "useCustomizationStore > should toggle task selection",
          "state": "passed"
        },
        {
          "name": "should calculate total estimated time",
          "fullName": "useCustomizationStore > should calculate total estimated time",
          "state": "passed"
        },
        {
          "name": "should navigate through steps",
          "fullName": "useCustomizationStore > should navigate through steps",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/tinpavlic1/claude-projects/ChecklistApp/hooks/__tests__/use-viewport.test.ts",
      "tests": [
        {
          "name": "should return initial viewport size",
          "fullName": "useViewport > should return initial viewport size",
          "state": "passed"
        },
        {
          "name": "should detect mobile viewport",
          "fullName": "useViewport > should detect mobile viewport",
          "state": "passed"
        },
        {
          "name": "should detect tablet viewport",
          "fullName": "useViewport > should detect tablet viewport",
          "state": "passed"
        },
        {
          "name": "should update on window resize",
          "fullName": "useViewport > should update on window resize",
          "state": "passed"
        },
        {
          "name": "should clean up event listener on unmount",
          "fullName": "useViewport > should clean up event listener on unmount",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/tinpavlic1/claude-projects/ChecklistApp/lib/services/__tests__/template-service.test.ts",
      "tests": [
        {
          "name": "should create a new template",
          "fullName": "TemplateService > createTemplate > should create a new template",
          "state": "passed"
        },
        {
          "name": "should return default templates for service and property type",
          "fullName": "TemplateService > getDefaultTemplates > should return default templates for service and property type",
          "state": "passed"
        },
        {
          "name": "should return empty array for unknown combination",
          "fullName": "TemplateService > getDefaultTemplates > should return empty array for unknown combination",
          "state": "passed"
        },
        {
          "name": "should retrieve a template by id",
          "fullName": "TemplateService > getTemplate > should retrieve a template by id",
          "state": "passed"
        },
        {
          "name": "should return undefined for non-existent template",
          "fullName": "TemplateService > getTemplate > should return undefined for non-existent template",
          "state": "passed"
        },
        {
          "name": "should update template properties",
          "fullName": "TemplateService > updateTemplate > should update template properties",
          "state": "passed"
        },
        {
          "name": "should add items to template",
          "fullName": "TemplateService > updateTemplate > should add items to template",
          "state": "passed"
        },
        {
          "name": "should delete a template",
          "fullName": "TemplateService > deleteTemplate > should delete a template",
          "state": "passed"
        },
        {
          "name": "should not delete default templates",
          "fullName": "TemplateService > deleteTemplate > should not delete default templates",
          "state": "passed"
        },
        {
          "name": "should return all templates including defaults",
          "fullName": "TemplateService > getAllTemplates > should return all templates including defaults",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/tinpavlic1/claude-projects/ChecklistApp/lib/services/__tests__/checklist-service.test.ts",
      "tests": [
        {
          "name": "should create a new checklist from template",
          "fullName": "ChecklistService > createChecklist > should create a new checklist from template",
          "state": "passed"
        },
        {
          "name": "should create an empty checklist",
          "fullName": "ChecklistService > createChecklist > should create an empty checklist",
          "state": "passed"
        },
        {
          "name": "should toggle item completion status",
          "fullName": "ChecklistService > updateChecklistItem > should toggle item completion status",
          "state": "passed"
        },
        {
          "name": "should update item text",
          "fullName": "ChecklistService > updateChecklistItem > should update item text",
          "state": "passed"
        },
        {
          "name": "should add a new item to checklist",
          "fullName": "ChecklistService > addItemToChecklist > should add a new item to checklist",
          "state": "passed"
        },
        {
          "name": "should add custom item with all properties",
          "fullName": "ChecklistService > addItemToChecklist > should add custom item with all properties",
          "state": "passed"
        },
        {
          "name": "should remove an item from checklist",
          "fullName": "ChecklistService > removeItemFromChecklist > should remove an item from checklist",
          "state": "passed"
        },
        {
          "name": "should retrieve a checklist by id",
          "fullName": "ChecklistService > getChecklist > should retrieve a checklist by id",
          "state": "passed"
        },
        {
          "name": "should return undefined for non-existent checklist",
          "fullName": "ChecklistService > getChecklist > should return undefined for non-existent checklist",
          "state": "passed"
        },
        {
          "name": "should retrieve all checklists",
          "fullName": "ChecklistService > getAllChecklists > should retrieve all checklists",
          "state": "passed"
        },
        {
          "name": "should delete a checklist",
          "fullName": "ChecklistService > deleteChecklist > should delete a checklist",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/tinpavlic1/claude-projects/ChecklistApp/lib/types/__tests__/checklist.test.ts",
      "tests": [
        {
          "name": "should have required properties",
          "fullName": "Checklist Domain Models > ChecklistItem > should have required properties",
          "state": "passed"
        },
        {
          "name": "should have required properties",
          "fullName": "Checklist Domain Models > Checklist > should have required properties",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/tinpavlic1/claude-projects/ChecklistApp/tests/example.test.ts",
      "tests": [
        {
          "name": "should pass a basic test",
          "fullName": "Example Test Suite > should pass a basic test",
          "state": "passed"
        },
        {
          "name": "should handle boolean values",
          "fullName": "Example Test Suite > should handle boolean values",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/tinpavlic1/claude-projects/ChecklistApp/lib/services/__tests__/qa-engine.test.ts",
      "tests": [
        {
          "name": "should start with service type question",
          "fullName": "QAEngine > Question Flow > should start with service type question",
          "state": "skipped"
        },
        {
          "name": "should progress to property type after service selection",
          "fullName": "QAEngine > Question Flow > should progress to property type after service selection",
          "state": "skipped"
        }
      ]
    }
  ],
  "unhandledErrors": [],
  "reason": "passed"
}